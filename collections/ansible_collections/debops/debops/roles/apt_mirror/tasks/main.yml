---
# Copyright (C) 2023 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2023 DebOps <http://debops.org/>
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Install required packages
  ansible.builtin.package:
    name: '{{ (apt_mirror__base_packages + apt_mirror__packages) | flatten }}'
    state: 'present'
  register: apt_mirror__register_install
  until: apt_mirror__register_install is succeeded

- name: Get list of dpkg-stateoverride paths
  ansible.builtin.shell: |
    set -o nounset -o pipefail -o errexit && dpkg-statoverride --list | awk '{print $4}'
  args:
    executable: 'bash'
  register: apt_mirror__register_statoverride
  changed_when: False
  check_mode: False

  # apt-mirror stores passwords included in URLs as plaintext inside of its
  # spool directory - it cannot be world-readable
- name: Fix permissions for apt-mirror spool directory
  ansible.builtin.command: |
    dpkg-statoverride --update --add {{ apt_mirror__user }} {{ apt_mirror__group }} 0750 /var/spool/apt-mirror/var
  register: apt_mirror__register_statoverride_set
  changed_when: apt_mirror__register_statoverride_set.changed | bool
  when: '"/var/spool/apt-mirror/var" not in apt_mirror__register_statoverride.stdout_lines'

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save apt_mirror local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/apt_mirror.fact.j2'
    dest: '/etc/ansible/facts.d/apt_mirror.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'

- name: Divert the original apt-mirror configuration
  debops.debops.dpkg_divert:
    path: '{{ item }}'
    state: 'present'
  loop:
    - '/etc/apt/mirror.list'
    - '/etc/cron.d/apt-mirror'
  when: ansible_pkg_mgr == 'apt'

- name: Remove apt-mirror configuration if requested
  ansible.builtin.file:
    path: '{{ "/etc/apt/" + (item.filename | d("mirror." + item.name + ".list")) }}'
    state: 'absent'
  loop: '{{ apt_mirror__combined_configuration | flatten
            | debops.debops.parse_kv_items(merge_keys=["sources"]) }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state | d("present")} }}'
  when: item.state | d('present') == 'absent'

- name: Generate apt-mirror configuration files
  ansible.builtin.template:
    src: 'etc/apt/mirror.list.j2'
    dest: '{{ "/etc/apt/" + (item.filename | d("mirror." + item.name + ".list")) }}'
    owner: '{{ apt_mirror__user }}'
    group: '{{ apt_mirror__group }}'
    mode: '0640'
  loop: '{{ apt_mirror__combined_configuration | flatten
            | debops.debops.parse_kv_items(defaults={"options": (apt_mirror__default_options | debops.debops.parse_kv_config)},
                                           merge_keys=["sources"]) }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state | d("present")} }}'
  when: item.state | d('present') not in [ 'absent', 'ignore', 'init' ]

- name: Create data directories for separate mirror instances
  ansible.builtin.file:
    path: '{{ "/var/spool/apt-mirror/var/var." + item.name }}'
    owner: '{{ apt_mirror__user }}'
    group: '{{ apt_mirror__group }}'
    mode: '0750'
    state: 'directory'
  loop: '{{ apt_mirror__combined_configuration | flatten
            | debops.debops.parse_kv_items(defaults={"options": (apt_mirror__default_options | debops.debops.parse_kv_config)},
                                           merge_keys=["sources"]) }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state | d("present")} }}'
  when: item.state | d('present') not in [ 'absent', 'ignore', 'init' ]

- name: Create postmirror.sh script for separate mirror instances
  ansible.builtin.file:
    path: '{{ "/var/spool/apt-mirror/var/var." + item.name + "/postmirror.sh" }}'
    owner: '{{ apt_mirror__user }}'
    group: '{{ apt_mirror__group }}'
    mode: '0755'
    state: 'touch'
    modification_time: 'preserve'
    access_time: 'preserve'
  loop: '{{ apt_mirror__combined_configuration | flatten
            | debops.debops.parse_kv_items(defaults={"options": (apt_mirror__default_options | debops.debops.parse_kv_config)},
                                           merge_keys=["sources"]) }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state | d("present")} }}'
  when: item.state | d('present') not in [ 'absent', 'ignore', 'init' ]

- name: Generate cron configuration for apt-mirror
  ansible.builtin.template:
    src: 'etc/cron.d/apt-mirror.j2'
    dest: '/etc/cron.d/apt-mirror'
    mode: '0644'
