---
# Copyright (C) 2019 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2019 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  ansible.builtin.import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Install required packages
  ansible.builtin.package:
    name: '{{ q("flattened", (resolvconf__base_packages
                              + resolvconf__packages)) }}'
    state: '{{ resolvconf__deploy_state }}'
  register: resolvconf__register_packages
  until: resolvconf__register_packages is succeeded
  when: (resolvconf__enabled | bool and
         resolvconf__deploy_state in ['present', 'absent'])

- name: Generate static configuration script
  ansible.builtin.template:
    src: 'usr/local/lib/resolvconf-static.j2'
    dest: '/usr/local/lib/resolvconf-static'
    mode: '0755'
  notify: [ 'Apply static resolvconf configuration' ]
  when: (resolvconf__enabled | bool and resolvconf__static_enabled | bool and
         resolvconf__deploy_state in ['present'])

- name: Create systemd override directory
  ansible.builtin.file:
    path: '/etc/systemd/system/resolvconf.service.d'
    state: 'directory'
    mode: '0755'
  when: (resolvconf__enabled | bool and resolvconf__static_enabled | bool and
         resolvconf__deploy_state in ['present'])

- name: Generate systemd service override
  ansible.builtin.template:
    src: 'etc/systemd/system/resolvconf.service.d/static.conf.j2'
    dest: '/etc/systemd/system/resolvconf.service.d/static.conf'
    mode: '0644'
  notify: [ 'Reload service manager' ]
  when: (resolvconf__enabled | bool and resolvconf__static_enabled | bool and
         resolvconf__deploy_state in ['present'])

- name: Add diversion of /etc/resolvconf/interface-order
  debops.debops.dpkg_divert:
    path: '/etc/resolvconf/interface-order'
    state: '{{ resolvconf__deploy_state }}'
    delete: True
  notify: [ 'Refresh /etc/resolv.conf' ]
  when: (resolvconf__enabled | bool and
         resolvconf__deploy_state in ['present'])

- name: Remove diversion of /etc/resolvconf/interface-order
  debops.debops.dpkg_divert:
    path: '/etc/resolvconf/interface-order'
    state: '{{ resolvconf__deploy_state }}'
    delete: True
  when: (resolvconf__enabled | bool and
         resolvconf__deploy_state in ['absent'])

- name: Generate /etc/resolvconf/interface-order configuration
  ansible.builtin.template:
    src: 'etc/resolvconf/interface-order.j2'
    dest: '/etc/resolvconf/interface-order'
    mode: '0644'
  notify: [ 'Refresh /etc/resolv.conf' ]
  when: resolvconf__enabled | bool and resolvconf__deploy_state == 'present'

- name: Remove configuration
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'absent'
  when: (resolvconf__enabled | bool and
         resolvconf__deploy_state in ['absent'])
  loop:
    - '/usr/local/lib/resolvconf-static'
    - '/etc/systemd/system/resolvconf.service.d/static.conf'
    - '/etc/systemd/system/resolvconf.service.d'

- name: Create static /etc/resolv.conf
  ansible.builtin.copy:
    mode: '0755'
    dest: "/etc/resolv.conf"
    content: '{{ resolvconf__static_content }}'
  when: (resolvconf__enabled | bool and resolvconf__static_enabled | bool and
         resolvconf__static_content != '' and resolvconf__deploy_state != 'present')

- name: Make sure Ansible fact directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Generate resolvconf Ansible local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/resolvconf.fact.j2'
    dest: '/etc/ansible/facts.d/resolvconf.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Reload facts if they were modified
  ansible.builtin.meta: 'flush_handlers'
