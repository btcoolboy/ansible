---
# Copyright (C) 2024 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2024 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Manage native roles in Elasticsearch
  ansible.builtin.uri:
    url: '{{ elasticsearch__api_base_url + "/_security/role/" + item.name }}'
    method:      '{{ "DELETE" if (item.state | d("present") in ["absent"]) else "POST" }}'
    body_format: '{{ omit if (item.state | d("present") in ["absent"]) else "json" }}'
    body:        '{{ omit if (item.state | d("present") in ["absent"]) else (item.data | to_json) }}'
    status_code: '{{ ["200", "404"] if (item.state | d("present") in ["absent"]) else "200" }}'  # noqa args[module]
    user: "{{ elasticsearch__api_username }}"
    password: "{{ elasticsearch__api_password }}"
    force_basic_auth: True
  loop: '{{ elasticsearch__combined_native_roles | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state | d("present")} }}'
  when: elasticsearch__api_base_url and item.state | d('present') not in ['init', 'ignore']
  no_log: '{{ debops__no_log | d(True) }}'

- name: Manage native users in Elasticsearch
  ansible.builtin.uri:
    url: '{{ elasticsearch__api_base_url + "/_security/user/" + item.name }}'
    method:      '{{ "DELETE" if (item.state | d("present") in ["absent"]) else "POST" }}'
    body_format: '{{ omit if (item.state | d("present") in ["absent"]) else "json" }}'
    body:        '{{ omit if (item.state | d("present") in ["absent"]) else (item.data | to_json) }}'
    status_code: '{{ ["200", "404"] if (item.state | d("present") in ["absent"]) else "200" }}'  # noqa args[module]
    user: "{{ elasticsearch__api_username }}"
    password: "{{ elasticsearch__api_password }}"
    force_basic_auth: True
  loop: '{{ elasticsearch__combined_native_users | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state | d("present")} }}'
  when: elasticsearch__api_base_url and item.state | d('present') not in ['init', 'ignore']
  no_log: '{{ debops__no_log | d(True) }}'
